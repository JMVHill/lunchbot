#!/usr/bin/env python

from slackclient import SlackClient
import sys
import select

if len(sys.argv) != 3:
    print >>sys.stderr, "Usage: {} channel botname".format(sys.argv[0])
    sys.exit(2)

channel_name = sys.argv[1]
name = sys.argv[2]

conn = SlackClient("<redacted>")
if not conn.rtm_connect():
    print >>sys.stderr, "couldn't connect"
    sys.exit(1)

found = [x for x in conn.server.channels if x.name == channel_name]

if len(found) != 1:
    print >>sys.stderr, "found {} channels:".format(len(found))
    for c in found:
        print >>sys.stderr, "\t{}".format(c)
    sys.exit(1)

chan = found[0]

print "connected"

def ENCODE(s):
    return s.encode('utf-8')

def handle_stdin():
    try:
        line = raw_input()
    except EOFError:
        sys.exit(0)

    conn.api_call(
            "chat.postMessage",
            channel = chan.id,
            text = line,
            username = name,
            as_user = False)

def find_channel(id):
    for i in conn.server.channels:
        if i.id == id:
            return i
    return None

def find_user(id):
    for i in conn.server.users:
        if i.id == id:
            if i.real_name != None and len(i.real_name) > 0:
                return i.real_name
            return i.name
    return None

def handle_slack():
    for slack_message in conn.rtm_read():
        if slack_message.get("type") is None:
            continue

        text = slack_message.get("text")
        user_id = slack_message.get("user")
        channel_id = slack_message.get("channel")

        if channel_id is None:
            continue
        local_chan = find_channel(channel_id)

        if user_id is None:
            continue
        local_user = find_user(user_id)

        if not text or not local_user or not local_chan:
            continue

        if ENCODE(local_chan.name) != channel_name:
            continue

        print "%s: %s" % (ENCODE(local_user), ENCODE(text))

while True:
    ready = select.select([sys.stdin, conn.server.websocket], [], [])
    ready_in = ready[0]

    if sys.stdin in ready_in:
        handle_stdin()
    if conn.server.websocket in ready_in:
        handle_slack()
